// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using charityMVC;

#nullable disable

namespace charityMVC.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240714140407_IntialMigration")]
    partial class IntialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("charityMVC.Models.Accepted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("bank_account_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("fullAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("points")
                        .HasColumnType("REAL");

                    b.Property<string>("proxyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("proxy_account_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accepteds");
                });

            modelBuilder.Entity("charityMVC.Models.AcceptedsPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("acceptedId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("payMentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("acceptedsPayments");
                });

            modelBuilder.Entity("charityMVC.Models.Admin", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isSuperAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("charityMVC.Models.Clerk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("clerk");
                });

            modelBuilder.Entity("charityMVC.Models.PayMent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("acceptedsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("TEXT");

                    b.Property<float>("income")
                        .HasColumnType("REAL");

                    b.Property<float>("pointValue")
                        .HasColumnType("REAL");

                    b.Property<float>("pointsCount")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PayMents");
                });

            modelBuilder.Entity("charityMVC.Models.Roles", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("charityMVC.Models.Support", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float?>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("bank_account_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fullAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("paymentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("points")
                        .HasColumnType("REAL");

                    b.Property<string>("proxyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("proxy_account_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("support");
                });

            modelBuilder.Entity("charityMVC.Models.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("_proxy_account_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("_proxy_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("bank_account_number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("birthDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("children_count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<bool>("debt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("debt_proof")
                        .HasColumnType("TEXT");

                    b.Property<bool>("disability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("disability_proof")
                        .HasColumnType("TEXT");

                    b.Property<bool>("elderly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("family_card_image")
                        .HasColumnType("TEXT");

                    b.Property<string>("fullAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("house_rent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("id_image")
                        .HasColumnType("TEXT");

                    b.Property<bool>("income_support")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isPhoneValid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("points")
                        .HasColumnType("REAL");

                    b.Property<bool>("proxy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("rent_proof")
                        .HasColumnType("TEXT");

                    b.Property<bool>("widow")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("charityMVC.Models.points", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("children_count_1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("children_count_2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("children_count_3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("children_count_4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("children_count_4p")
                        .HasColumnType("INTEGER");

                    b.Property<int>("elderly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("hasNo_income_support")
                        .HasColumnType("INTEGER");

                    b.Property<int>("has_debt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("has_disability")
                        .HasColumnType("INTEGER");

                    b.Property<int>("house_is_rent")
                        .HasColumnType("INTEGER");

                    b.Property<float>("pointValue")
                        .HasColumnType("REAL");

                    b.Property<int>("widow")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("points");
                });

            modelBuilder.Entity("charityMVC.Models.smsValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValidationCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("smsValidation");
                });
#pragma warning restore 612, 618
        }
    }
}
